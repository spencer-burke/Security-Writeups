0x0000000000400640 <+0>:	push   r15
0x0000000000400642 <+2>:	push   r14
0x0000000000400644 <+4>:	mov    r15,rdx
0x0000000000400647 <+7>:	push   r13
0x0000000000400649 <+9>:	push   r12
0x000000000040064b <+11>:	lea    r12,[rip+0x20079e]        # 0x600df0
0x0000000000400652 <+18>:	push   rbp
0x0000000000400653 <+19>:	lea    rbp,[rip+0x20079e]        # 0x600df8
0x000000000040065a <+26>:	push   rbx
0x000000000040065b <+27>:	mov    r13d,edi
0x000000000040065e <+30>:	mov    r14,rsi
0x0000000000400661 <+33>:	sub    rbp,r12
0x0000000000400664 <+36>:	sub    rsp,0x8
0x0000000000400668 <+40>:	sar    rbp,0x3
0x000000000040066c <+44>:	call   0x4004d0 <_init>
0x0000000000400671 <+49>:	test   rbp,rbp
0x0000000000400674 <+52>:	je     0x400696 <__libc_csu_init+86>
0x0000000000400676 <+54>:	xor    ebx,ebx
0x0000000000400678 <+56>:	nop    DWORD PTR [rax+rax*1+0x0]
0x0000000000400680 <+64>:	mov    rdx,r15
0x0000000000400683 <+67>:	mov    rsi,r14
0x0000000000400686 <+70>:	mov    edi,r13d
0x0000000000400689 <+73>:	call   QWORD PTR [r12+rbx*8]
0x000000000040068d <+77>:	add    rbx,0x1
0x0000000000400691 <+81>:	cmp    rbp,rbx
0x0000000000400694 <+84>:	jne    0x400680 <__libc_csu_init+64>
0x0000000000400696 <+86>:	add    rsp,0x8
0x000000000040069a <+90>:	pop    rbx
0x000000000040069b <+91>:	pop    rbp
0x000000000040069c <+92>:	pop    r12
0x000000000040069e <+94>:	pop    r13
0x00000000004006a0 <+96>:	pop    r14
0x00000000004006a2 <+98>:	pop    r15
0x00000000004006a4 <+100>:	ret